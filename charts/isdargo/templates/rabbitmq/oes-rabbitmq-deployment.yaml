{{- if eq .Values.installationMode "OEA-AP" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: rabbitmq
{{ include "oes.standard-labels" . | indent 4 }}
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: rabbitmq
  template:
    metadata:
      annotations:
{{- if .Values.rabbitmq.annotations -}}
{{ toYaml .Values.rabbitmq.annotations | nindent 8 }}
{{- end }}
      labels:
        app: oes
        component: rabbitmq
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      containers:
      - image: {{ .Values.rabbitmq.image.registry }}:{{ .Values.rabbitmq.image.repository }}
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        ports:
        - containerPort: {{ .Values.rabbitmq.port }}
          protocol: TCP
        resources: {}
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
{{- end -}}

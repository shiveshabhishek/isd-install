{{- if or (.Values.installArgoCD) (.Values.autoconfigureagent) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: carina-instance
{{ include "oes.standard-labels" . | indent 4 }}
  name: carina-instance
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: carina-instance
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oes
        component: carina-instance
{{ include "oes.standard-labels" . | indent 8 }}
      annotations:
{{- if .Values.carinainstance.annotations -}}
        {{ toYaml .Values.carinainstance.annotations | nindent 8 }}
{{- end }}
    spec:
      containers:
      - image: {{ template "carinainstance.image" . }}
        imagePullPolicy: IfNotPresent
        name: carina-instance
        ports:
        - containerPort: 8090
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: argocd-server
      serviceAccountName: argocd-server
      terminationGracePeriodSeconds: 30
{{- end -}}
